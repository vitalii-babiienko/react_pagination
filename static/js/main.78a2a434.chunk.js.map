{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","itemsPerPage","Math","ceil","pages","Array","fill","map","num","i","className","classNames","disabled","href","onClick","page","active","items","from","to","numbers","n","push","getNumbers","App","useState","setPerPage","setCurrentPage","lastIndex","firstIndex","currentList","slice","lastOnPage","min","length","id","onChange","event","Number","target","value","window","history","replaceState","selected","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAeC,KAAKC,KAAKN,EAAQC,GACjCM,EAAQC,MAAMJ,GAAcK,KAAK,GAAGC,KAAI,SAACC,EAAKC,GAAN,OAAYD,EAAMC,KAEhE,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBb,IAFd,SAKE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAI,WAAMd,GACV,gBAA+B,IAAhBA,EACfe,QAAS,kBAAMd,EAAaD,EAAc,IAL5C,oBAUDK,EAAMG,KAAI,SAACQ,GAAD,OACT,oBACEL,UAAWC,IACT,YACA,CAAEK,OAAQD,IAAShB,IAHvB,SAOE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAI,WAAME,GACVD,QAAS,kBAAOC,IAAShB,GAAgBC,EAAae,IAJxD,SAMGA,KAREA,MAaT,oBACEL,UAAWC,IACT,YACA,CAAEC,SAAUb,IAAgBE,IAHhC,SAME,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAI,WAAMd,GACV,gBAAeA,IAAgBE,EAC/Ba,QAAS,kBAAMd,EAAaD,EAAc,IAL5C,wBCxDR,IAAMkB,ECLC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IAAIhB,KAAI,SAAAc,GAAC,qBAAYA,MAEpCG,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO3B,EAAP,KAAgB4B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO1B,EAAP,KAAoB4B,EAApB,KAEMC,EAAY9B,EAAUC,EACtB8B,EAAaD,EAAY9B,EACzBgC,EAAcb,EAAMc,MAAMF,EAAYD,GACtCI,EAAa9B,KAAK+B,IAAIL,EAAWX,EAAMiB,QAY7C,OACE,sBAAKxB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,mBACiC8B,EAAa,EAD9C,cACqDG,EADrD,eACsEf,EAAMiB,OAD5E,OAIA,sBAAKxB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRyB,GAAG,kBACHzB,UAAU,eACV0B,SAAU,SAAAC,GAAK,OApBAtB,EAoBoBuB,OAAOD,EAAME,OAAOC,OAnB/Dd,EAAWX,GACXY,EAAe,QACfc,OAAOC,QAAQC,aAAa,KAAM,GAAI,MAHhB,IAAC5B,GAgBjB,UAME,wBAAQyB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAII,UAAQ,EAA1B,eACA,wBAAQJ,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBnC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAAOoB,EAAMiB,OACbpC,QAASA,EACTC,YAAaA,EACbC,aA1Ce,SAACe,GAAD,OACnBY,EAAeZ,MA4Cb,6BACGe,EAAYvB,KAAI,SAAAuC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YE9DjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.78a2a434.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const itemsPerPage = Math.ceil(total / perPage);\n  const pages = Array(itemsPerPage).fill(1).map((num, i) => num + i);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: currentPage === 1 },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={currentPage === 1}\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {pages.map((page: number) => (\n        <li\n          className={classNames(\n            'page-item',\n            { active: page === currentPage },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => (page !== currentPage) && onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === itemsPerPage },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={currentPage === itemsPerPage}\n          onClick={() => onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const lastIndex = perPage * currentPage;\n  const firstIndex = lastIndex - perPage;\n  const currentList = items.slice(firstIndex, lastIndex);\n  const lastOnPage = Math.min(lastIndex, items.length);\n\n  const onPageChange = (page: number) => (\n    setCurrentPage(page)\n  );\n\n  const setItemsPerPage = (page: number) => {\n    setPerPage(page);\n    setCurrentPage(1);\n    window.history.replaceState(null, '', '#1');\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstIndex + 1} - ${lastOnPage} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={event => setItemsPerPage(Number(event.target.value))}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\" selected>5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {currentList.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}